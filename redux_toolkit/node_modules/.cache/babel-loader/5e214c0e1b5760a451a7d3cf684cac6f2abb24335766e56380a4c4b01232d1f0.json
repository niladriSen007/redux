{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// Define a service using a base URL and expected endpoints\nexport const adminApi = createApi({\n  reducerPath: 'adminApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `http://localhost:8000/`\n  }),\n  endpoints: builder => ({\n    getUserById: builder.query({\n      query: id => `accounts/${id}`,\n      providesTags: [\"accounts\"]\n    }),\n    getAllUsers: builder.query({\n      query: () => `accounts`,\n      providesTags: [\"accounts\"],\n      transformResponse: res => res.sport\n    }),\n    addAccount: builder.mutation({\n      query: (amount, id) => ({\n        url: \"accounts\",\n        method: \"POST\",\n        body: {\n          amount,\n          id\n        }\n      }),\n      invalidatesTags: [\"accounts\"]\n    }),\n    updateAccount: builder.mutation({\n      query: _ref => {\n        let {\n          id,\n          amount\n        } = _ref;\n        return {\n          url: `accounts/${id}`,\n          method: \"PATCH\",\n          body: {\n            amount\n          }\n        };\n      },\n      invalidatesTags: [\"accounts\"]\n    }),\n    deleteAccount: builder.mutation({\n      query: id => ({\n        url: `accounts/${id}`,\n        method: \"DELETE\"\n      }),\n      invalidatesTags: [\"accounts\"]\n    })\n  })\n});\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const {\n  useGetUserByIdQuery,\n  useAddAccountMutation,\n  useGetAllUsersQuery,\n  useDeleteAccountMutation,\n  useUpdateAccountMutation\n} = adminApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","adminApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getUserById","query","id","providesTags","getAllUsers","transformResponse","res","sport","addAccount","mutation","amount","url","method","body","invalidatesTags","updateAccount","_ref","deleteAccount","useGetUserByIdQuery","useAddAccountMutation","useGetAllUsersQuery","useDeleteAccountMutation","useUpdateAccountMutation"],"sources":["C:/Users/NILADRI/Desktop/redux/redux_toolkit/src/api/adminSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\n// Define a service using a base URL and expected endpoints\r\nexport const adminApi = createApi({\r\n  reducerPath: 'adminApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: `http://localhost:8000/` }),\r\n  endpoints: (builder) => ({\r\n    getUserById: builder.query({\r\n      query: (id) => `accounts/${id}`,\r\n      providesTags:[\"accounts\"],\r\n    }),\r\n    getAllUsers: builder.query({\r\n      query: () => `accounts`,\r\n      providesTags:[\"accounts\"],\r\n      transformResponse:(res)=>res.sport\r\n    }),\r\n    addAccount: builder.mutation({\r\n      query: (amount,id) => ({\r\n        url:\"accounts\",\r\n        method:\"POST\",\r\n        body:{amount,id}\r\n      }),\r\n      invalidatesTags:[\"accounts\"]\r\n    }),\r\n    updateAccount: builder.mutation({\r\n      query: ({id,amount}) => ({\r\n        url:`accounts/${id}`,\r\n        method:\"PATCH\",\r\n        body:{amount}\r\n      }),\r\n      invalidatesTags:[\"accounts\"]\r\n    }),\r\n    deleteAccount: builder.mutation({\r\n      query: (id) => ({\r\n        url:`accounts/${id}`,\r\n        method:\"DELETE\",\r\n      }),\r\n      invalidatesTags:[\"accounts\"]\r\n    }),\r\n    \r\n  }),\r\n})\r\n\r\n// Export hooks for usage in functional components, which are\r\n// auto-generated based on the defined endpoints\r\nexport const { useGetUserByIdQuery,useAddAccountMutation,useGetAllUsersQuery,useDeleteAccountMutation,useUpdateAccountMutation } = adminApi"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;;AAExE;AACA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,UAAU;EACvBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAG;EAAwB,CAAC,CAAC;EAChEC,SAAS,EAAGC,OAAO,KAAM;IACvBC,WAAW,EAAED,OAAO,CAACE,KAAK,CAAC;MACzBA,KAAK,EAAGC,EAAE,IAAM,YAAWA,EAAG,EAAC;MAC/BC,YAAY,EAAC,CAAC,UAAU;IAC1B,CAAC,CAAC;IACFC,WAAW,EAAEL,OAAO,CAACE,KAAK,CAAC;MACzBA,KAAK,EAAEA,CAAA,KAAO,UAAS;MACvBE,YAAY,EAAC,CAAC,UAAU,CAAC;MACzBE,iBAAiB,EAAEC,GAAG,IAAGA,GAAG,CAACC;IAC/B,CAAC,CAAC;IACFC,UAAU,EAAET,OAAO,CAACU,QAAQ,CAAC;MAC3BR,KAAK,EAAEA,CAACS,MAAM,EAACR,EAAE,MAAM;QACrBS,GAAG,EAAC,UAAU;QACdC,MAAM,EAAC,MAAM;QACbC,IAAI,EAAC;UAACH,MAAM;UAACR;QAAE;MACjB,CAAC,CAAC;MACFY,eAAe,EAAC,CAAC,UAAU;IAC7B,CAAC,CAAC;IACFC,aAAa,EAAEhB,OAAO,CAACU,QAAQ,CAAC;MAC9BR,KAAK,EAAEe,IAAA;QAAA,IAAC;UAACd,EAAE;UAACQ;QAAM,CAAC,GAAAM,IAAA;QAAA,OAAM;UACvBL,GAAG,EAAE,YAAWT,EAAG,EAAC;UACpBU,MAAM,EAAC,OAAO;UACdC,IAAI,EAAC;YAACH;UAAM;QACd,CAAC;MAAA,CAAC;MACFI,eAAe,EAAC,CAAC,UAAU;IAC7B,CAAC,CAAC;IACFG,aAAa,EAAElB,OAAO,CAACU,QAAQ,CAAC;MAC9BR,KAAK,EAAGC,EAAE,KAAM;QACdS,GAAG,EAAE,YAAWT,EAAG,EAAC;QACpBU,MAAM,EAAC;MACT,CAAC,CAAC;MACFE,eAAe,EAAC,CAAC,UAAU;IAC7B,CAAC;EAEH,CAAC;AACH,CAAC,CAAC;;AAEF;AACA;AACA,OAAO,MAAM;EAAEI,mBAAmB;EAACC,qBAAqB;EAACC,mBAAmB;EAACC,wBAAwB;EAACC;AAAyB,CAAC,GAAG5B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}