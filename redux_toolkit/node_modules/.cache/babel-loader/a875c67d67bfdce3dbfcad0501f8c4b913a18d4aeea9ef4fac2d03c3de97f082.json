{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// Define a service using a base URL and expected endpoints\nexport const adminApi = createApi({\n  reducerPath: 'adminApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `http://localhost:8000/`\n  }),\n  endpoints: builder => ({\n    getUserById: builder.query({\n      query: id => `accounts/${id}`,\n      providesTags: [\"accounts\"]\n    }),\n    getUser: builder.query({\n      query: id => `accounts/${id}`,\n      providesTags: [\"accounts\"]\n    }),\n    addAccount: builder.mutation({\n      query: (amount, id) => ({\n        url: \"accounts\",\n        method: \"POST\",\n        body: {\n          amount,\n          id\n        }\n      })\n    })\n  })\n});\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const {\n  useGetUserByIdQuery,\n  useAddAccountMutation\n} = adminApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","adminApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getUserById","query","id","providesTags","getUser","addAccount","mutation","amount","url","method","body","useGetUserByIdQuery","useAddAccountMutation"],"sources":["C:/Users/NILADRI/Desktop/redux/redux_toolkit/src/api/adminSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\n// Define a service using a base URL and expected endpoints\r\nexport const adminApi = createApi({\r\n  reducerPath: 'adminApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: `http://localhost:8000/` }),\r\n  endpoints: (builder) => ({\r\n    getUserById: builder.query({\r\n      query: (id) => `accounts/${id}`,\r\n      providesTags:[\"accounts\"],\r\n    }),\r\n    getUser: builder.query({\r\n      query: (id) => `accounts/${id}`,\r\n      providesTags:[\"accounts\"],\r\n    }),\r\n    addAccount: builder.mutation({\r\n      query: (amount,id) => ({\r\n        url:\"accounts\",\r\n        method:\"POST\",\r\n        body:{amount,id}\r\n      }),\r\n    }),\r\n    \r\n  }),\r\n})\r\n\r\n// Export hooks for usage in functional components, which are\r\n// auto-generated based on the defined endpoints\r\nexport const { useGetUserByIdQuery,useAddAccountMutation } = adminApi"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;;AAExE;AACA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,UAAU;EACvBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAG;EAAwB,CAAC,CAAC;EAChEC,SAAS,EAAGC,OAAO,KAAM;IACvBC,WAAW,EAAED,OAAO,CAACE,KAAK,CAAC;MACzBA,KAAK,EAAGC,EAAE,IAAM,YAAWA,EAAG,EAAC;MAC/BC,YAAY,EAAC,CAAC,UAAU;IAC1B,CAAC,CAAC;IACFC,OAAO,EAAEL,OAAO,CAACE,KAAK,CAAC;MACrBA,KAAK,EAAGC,EAAE,IAAM,YAAWA,EAAG,EAAC;MAC/BC,YAAY,EAAC,CAAC,UAAU;IAC1B,CAAC,CAAC;IACFE,UAAU,EAAEN,OAAO,CAACO,QAAQ,CAAC;MAC3BL,KAAK,EAAEA,CAACM,MAAM,EAACL,EAAE,MAAM;QACrBM,GAAG,EAAC,UAAU;QACdC,MAAM,EAAC,MAAM;QACbC,IAAI,EAAC;UAACH,MAAM;UAACL;QAAE;MACjB,CAAC;IACH,CAAC;EAEH,CAAC;AACH,CAAC,CAAC;;AAEF;AACA;AACA,OAAO,MAAM;EAAES,mBAAmB;EAACC;AAAsB,CAAC,GAAGlB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}